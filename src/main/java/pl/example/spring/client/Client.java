package pl.example.spring.client;

import jakarta.persistence.*;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.*;

/**
 * Represents a client entity in the system.
 * This class is mapped to the "client" table in the database using JPA annotations.
 * It includes fields for the client's ID, name, email, and address.
 *
 * <p>The class uses Lombok annotations to automatically generate getters, setters, constructors, and a builder.</p>
 * <p>Fields are validated using constraints such as `@NotBlank`, `@Email`, and `@NotNull` to ensure data integrity.</p>
 */
@AllArgsConstructor
@NoArgsConstructor
@Builder
@Getter
@Setter
@Entity
@Table(name = "client")
public class Client {

    /**
     * The unique identifier for the client.
     * This field is automatically generated by the database using an auto-increment strategy.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "id", nullable = false)
    private long id;

    /**
     * The name of the client.
     * This field is required, must be unique, and cannot be blank.
     */
    @Column(nullable = false, unique = true)
    @NotBlank
    private String name;

    /**
     * The email address of the client.
     * This field is required, must be a valid email format, and cannot be blank.
     */
    @Column(nullable = false)
    @Email
    @NotBlank
    private String mail;

    /**
     * The address of the client.
     * This field is required and must not be null.
     * It is embedded using the {@link Address} class.
     */
    @NotNull
    @Embedded
    private Address address;
}
